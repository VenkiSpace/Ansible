
---

  - name: Check if Service Exists
    stat: path=/etc/init.d/{{service_name}}
    register: service_status

  - name: check whether service exists or not
    assert:
      that:
        serviceName.stat.exists
      fail_msg: "Status: Failed !!! Status Message: The specified service does not exists"

  - name: Populate service facts
    service_facts:
    
  - name: Task 2 => Confirm that the service is running 
    assert:
      that:
        ansible_facts['services']['{{serviceName}}']['state'] != 'running' 
      fail_msg: "Status: Failed !!! Status Message: The service '{{ serviceName }}' is already running in the system."
    when: 0 > 1
    
  - name: Start service httpd, if not started
    ansible.builtin.service:
      name: "{{serviceName}}"
      state: started
    
  - name: Populate service facts
    service_facts:
    
  - name: Task 2 => Confirm that the service is running 
    assert:
      that:
        ansible_facts['services']['{{serviceName}}']['state'] == 'running' 
      success_msg: "Status: Success !!! Status Message: The service '{{ serviceName }}' is started in the system."
      fail_msg: "Status: Failure !!! Status Message: The service '{{ serviceName }}' is not started in the system."
    when: 0 > 1


  - name: Print target Host Name
    ansible.builtin.debug:
      msg: HostName => {{ inventory_hostname }}


  - name: Print target IP Address
    ansible.builtin.debug:
      msg: IPAddress => {{hostvars[inventory_hostname]['ansible_env'].SSH_CONNECTION.split(' ')[2]}}
