
--- 

  - name: Task 1 => Retrieve user details from the system before executing the create operation
    getent:
      database: passwd


  - name: Task 2 => Check whether the user id '{{ uid }}' is already exist in the system 
    assert:
      that:
        # uid not in getent_passwd 
      fail_msg: "Status: Failed !!! Status Message: The user id '{{ uid }}' is already exists in the system."
    when: 0 > 1


  - name: Task 3 => Check whether the user '{{ userName }}' is already exist in the system
    assert:
      that:
        - userName not in getent_passwd.keys()
      fail_msg: "Status: Failed !!! Status Message: The user '{{ userName }}' is already eixist in the system."


  - name: Task 4 => Retrive existing group details from the system
    getent:
      database: group


  - name: Task 5 => Check whether the group '{{ userGroup }}' exists in the system
    assert:
      that:
        - item in getent_group.keys()
      fail_msg: "Status: Failed !!! Status Message: The group '{{ item }}' does not exist in the system."
    loop: "{{ userGroup }}"


  - name: Task 6 => Execute user creaate operation for the given user name  '{{ userName }}'  
    ansible.builtin.user:
      uid: "{{ uid }}"
      name: "{{ userName }}"
      state: present
      password: "{{ password | password_hash('sha512') }}"
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa
      groups: "{{ userGroup }}"
        #expires: -1
      expires: 1422403387


  - name: Task 7 => Retrieve user details from the system after executing the create  operation
    getent:
      database: passwd


  - name: Task 8 => Check and confirm that the user '{{ userName }}' is created  successfully
    assert:
      that:
        - userName in getent_passwd.keys()
      success_msg: "Status: Success!!! Status Message: Creation operation is completed successfully for the user name '{{ userName }}'" 
      fail_msg: "Status: Failure!!! Status Message: Creation operation is failed for the user name '{{ userName }}'"
  
